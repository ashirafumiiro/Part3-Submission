{"version":3,"sources":["services/persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","className","Filter","props","style","height","value","filter","onChange","filterChange","PersonForm","onSubmit","handleSubmit","newName","nameChange","phoneNumber","phoneNumberChange","type","Persons","persons","deletePerson","p","name","toLowerCase","includes","map","person","key","number","onClick","App","useState","setPersons","setNewName","setPhoneNumber","setFilter","setMessage","useEffect","personsService","initialPersons","catch","err","console","log","displayMessage","msg","setTimeout","e","target","event","preventDefault","findIndex","window","confirm","personToUpdate","find","returnedPerson","newPerson","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9a8685b.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = id => {\n    const request = axios.delete(`${ baseUrl }/${ id }`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deletePerson }","import React from \"react\";\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification;","import React, { useState, useEffect } from 'react';\nimport personsService from './services/persons'\nimport Notification from './components/Notification'\nimport './index.css'\n\nconst Filter = (props)=>{\n  return (\n    <div style={{height: 50}}>filter show with \n        <input value={props.filter} onChange={props.filterChange}/>\n      </div>\n  );\n}\n\nconst PersonForm = (props)=>{\n  return(\n    <form onSubmit={props.handleSubmit}>\n    <div>\n      name: <input value={props.newName} onChange={props.nameChange}/>\n    </div>\n    <div>number: <input value={props.phoneNumber} onChange={props.phoneNumberChange}/></div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n  )\n}\n\nconst Persons = ({persons, filter, deletePerson})=>{\n  return (\n    <div>\n      {persons.filter(p=>p.name.toLowerCase().includes(filter))\n        .map(person=><div  key={person.name}>{person.name} {person.number} \n        <button onClick={()=>deletePerson(person)}>delete</button></div>)}\n    </div>\n  )\n\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ phoneNumber, setPhoneNumber ] = useState('') \n  const [ filter, setFilter ] = useState('');\n  const [message, setMessage] = useState(null);\n\n  useEffect(()=>{\n    personsService\n    .getAll()\n    .then(initialPersons=>{\n      setPersons(initialPersons);\n    })\n    .catch((err)=>console.log(err))\n  }, []);\n\n  const displayMessage = (msg)=>{\n    setMessage(msg);\n    setTimeout(()=>{\n      setMessage(null);\n    }, 3000)\n  }\n\n  const deletePerson = (person)=>{\n      if (window.confirm(`Delete ${person.name}?`)) {\n        personsService\n          .deletePerson(person.id)\n          .then(()=>{\n            setPersons(persons.filter(p=>p.id !== person.id))\n            displayMessage(`${person.name} has been deleted successfully`)\n          })\n          .catch(()=>{\n            displayMessage(\"Person does not exist\")\n          })\n      }\n  }\n\n  const handleSubmit = (event) =>{\n    event.preventDefault()\n    if(persons.findIndex(p=>p.name === newName) > -1){\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n          const personToUpdate = persons.find(p=>p.name===newName);\n          personsService\n            .update(personToUpdate.id, { ...personToUpdate, number: phoneNumber})\n            .then((returnedPerson)=>{\n              setPersons(persons.map(p => p.id !== returnedPerson.id ? p : returnedPerson))\n              displayMessage(`${returnedPerson.name}'s number has changed`)\n            })\n            .catch(()=>{\n              displayMessage(`Information for ${personToUpdate.name} has already been removed from server`)\n            });\n      }\n    } \n    else{\n      const person = {name: newName, number: phoneNumber};\n      personsService\n        .create(person)\n        .then(newPerson=>{\n          setPersons(persons.concat(newPerson));\n          displayMessage(`${newPerson.name} has been added`);\n        })\n        .catch(()=>{\n          displayMessage(\"Error creating person\")\n        });\n      setNewName('');\n      setPhoneNumber('')\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter filter={filter} filterChange={(e)=>setFilter(e.target.value)}/>\n      \n      <PersonForm\n        handleSubmit={handleSubmit} \n        newName={newName} \n        nameChange={(e)=>setNewName(e.target.value)}\n        phoneNumber={phoneNumber} \n        phoneNumberChange={(event)=>setPhoneNumber(event.target.value)}\n        />\n      <h2>Numbers</h2>\n      <Persons persons={persons} filter={filter} deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}